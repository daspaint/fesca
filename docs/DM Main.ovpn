# Specify that we are a client and that we
# will be pulling certain config file directives
# from the server.
client

# Use the same setting as you are using on
# the server.
# On most systems, the VPN will not function
# unless you partially or fully disable
# the firewall for the TUN/TAP interface.
dev tun
;dev dm-main
;dev-type tun

# Windows needs the TAP-Win32 adapter name
# from the Network Connections panel
# if you have more than one.  On XP SP2,
# you may need to disable the firewall
# for the TAP adapter.
#dev-node dm-main

# Are we connecting to a TCP or
# UDP server?  Use the same setting as
# on the server.
;proto tcp
proto udp

# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
remote vpn01.dm.informatik.tu-darmstadt.de 1194
remote vpn02.dm.informatik.tu-darmstadt.de 1194
remote gateway01.dm.informatik.tu-darmstadt.de 1194

# Choose a random host from the remote
# list for load-balancing.  Otherwise
# try hosts in the order specified.
;remote-random

# Keep trying indefinitely to resolve the
# host name of the OpenVPN server.  Very useful
# on machines which are not permanently connected
# to the internet such as laptops.
resolv-retry infinite

# Most clients don't need to bind to
# a specific local port number.
nobind

# Downgrade privileges after initialization (non-Windows only)
user nobody
group nogroup

# Try to preserve some state across restarts.
persist-key
persist-tun

# If you are connecting through an
# HTTP proxy to reach the actual OpenVPN
# server, put the proxy server/IP and
# port number here.  See the man page
# if your proxy server requires
# authentication.
;http-proxy-retry # retry on connection failures
;http-proxy [proxy server] [proxy port #]

# Wireless networks often produce a lot
# of duplicate packets.  Set this flag
# to silence duplicate packet warnings.
mute-replay-warnings

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
;ca ca.crt
;cert client.crt
;key client.key

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
remote-cert-tls server

# If a tls-auth key is used on the server
# then every client must also have the key.
;tls-auth ta.key 1

# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
# Note that v2.4 client/server will automatically
# negotiate AES-256-GCM in TLS mode.
# See also the ncp-cipher option in the manpage
auth SHA512
cipher AES-256-GCM

# Enable compression on the VPN link.
# Don't enable this unless it is also
# enabled in the server config file.
;comp-lzo

# Set log file verbosity.
verb 3

# Silence repeating messages
;mute 20

# Don't use VPN as default gateway
;pull-filter ignore redirect-gateway

# Provide information about authentication method
auth-user-pass

<ca>
-----BEGIN CERTIFICATE-----
MIIDPzCCAiegAwIBAgIUDjGkWXVScbZcmJyRCcYgVCfsi0UwDQYJKoZIhvcNAQEL
BQAwEjEQMA4GA1UEAwwHRE0gTWFpbjAeFw0yMTAzMjIxNzI4NDZaFw0zMTAzMjAx
NzI4NDZaMBIxEDAOBgNVBAMMB0RNIE1haW4wggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQCQkVv/4mj/Sa+u/xJYVWC1cFPBG4c0IZU+7zlcjJcEKpaIlhEo
nCOK8WreymY6+ou7WI8l6sHxiH5bMz0uQ3vmqsBEmb8pSPkB0erEbO92AuIv9Ezo
uUS9lCnT2zaOf3LhILySuu++Utzo9/hjNJRHMklLR863roqwe4SIxhlwtHG4nkU/
E2dhw2CxHvNOHKHd0NSrcp1DcKmm9zeAZUnxiEG+yFkOyY6Q5ZVMCGx5YdyBC/CK
zkCA8eWIw10qLs3x5WLVLu0UPHuCBsMq9KMOWMQKwQpGEKoTly3pxeXmaDviePx6
oXaAspTBWsmsSWDcB3Y5KearbEGkTC7sU1StAgMBAAGjgYwwgYkwHQYDVR0OBBYE
FDPURvo75kJ5sydacasX5MDTBa8NME0GA1UdIwRGMESAFDPURvo75kJ5sydacasX
5MDTBa8NoRakFDASMRAwDgYDVQQDDAdETSBNYWlughQOMaRZdVJxtlyYnJEJxiBU
J+yLRTAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOC
AQEAEtAJj0BdE4bskP0eX31OYyv3P0eUnmkz9RelGR/HB9ts3rNNgUwezd9Zu1TH
iphNLYZDS8lKNG3VFlImNk6JLjl3Y+LaXk99WgRCVRyKIkHLYZWShlKtzqAOP2Bd
oCduAIQFdsPyjtErRPn8zuruuv7Cj/KdcwGyr8/Huh2s+RQ2knC6GnZqF7wjl0Y0
+wxBOsdqxvA5XeFZTcI9CdIStpBBr22ma6hC88PDnDhjz4B7GTgkftV3BdnvIf4R
nwlS5n3cmhMnWI6Lvri8v2cYzcj8dpw8TP32T5c+ydSvvEazxiej+9uwiyemiuwF
2JycCuLpYf12mwh6LLJHh9s8Wg==
-----END CERTIFICATE-----
</ca>

<tls-auth>
-----BEGIN OpenVPN Static key V1-----
285c3fa473bc5cd864efdd08d114ff8c
96ca856071d6e301846617a7bd5ed2c9
07759a541ae52f8d3c8c3b11aa966dd4
4c92c00606f89e5d80876e1cf7ad05f8
b950660b7e9d7fba762307e89312e6f1
7f6691dfa50270bc53816d96a2cee3fd
71d771ba073225aa4624e4903e86f9e6
edc1cad9f0d244982b9b60e404855ab1
b43698407211670403571bd7eb95417d
b304d917f17ea7833d796130850b0b34
17c3af09653002afb6785b552c9d35fc
671ffbe4dc679265b9c557bc929d5617
7ea211be82cdaf7d0b6e5e6b7b557173
76006b87b24ff7f3c2c5e538cc8d7f84
5b8e3820acae28637b0dee994eeb6f40
4a6c7e41714a9f2b51b4d43f22421e18
-----END OpenVPN Static key V1-----
</tls-auth>
key-direction 1
